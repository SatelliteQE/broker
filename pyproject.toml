[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[project]
name = "broker"
version = "0.7.0rc3"
description = "The infrastructure middleman."
readme = "README.md"
requires-python = ">=3.10"
keywords = ["broker", "AnsibleTower", "docker", "podman", "beaker"]
authors = [{ name = "Jacob J Callahan", email = "jacob.callahan05@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
dependencies = [
    "click",
    "dynaconf>=3.1.6,<4.0.0",
    "logzero",
    "packaging",
    "requests",
    "rich",
    "rich_click",
    "ruamel.yaml",
]

[project.urls]
Repository = "https://github.com/SatelliteQE/broker"

[project.optional-dependencies]
ansible_pylibssh = ["ansible-pylibssh"]
ansibletower = ["awxkit"]
beaker = ["beaker-client"]
dev = [
    "bumpver",
    "docker",
    "pexpect",
    "pre-commit",
    "pytest",
    "pytest-randomly",
    "ruff",
]
docker = ["docker", "paramiko"]
hussh = ["hussh>=0.1.7"]
openstack = ["openstacksdk"]
paramiko = ["paramiko"]
podman = ["podman>=5.2"]
ssh2_python = ["ssh2-python"]
all = [
    "ansible-pylibssh",
    "awxkit",
    "beaker-client",
    "bumpver",
    "docker",
    "hussh>=0.1.7",
    "openstacksdk",
    "paramiko",
    "pexpect",
    "pre-commit",
    "pytest",
    "pytest-randomly",
    "podman>=5.2",
    "ruff",
    "ssh2-python",
]

[project.scripts]
broker = "broker.commands:cli"

[tool.uv.build-backend]
module-root = ""

[project.entry-points."broker.ssh.session"]
ansible-pylibssh = "broker.binds.pylibssh:Session"
ssh2-python = "broker.binds.ssh2:Session"
hussh = "broker.binds.hussh:Session"
paramiko = "broker.binds.paramiko:Session"

[project.entry-points."broker.ssh.interactive_shell"]
ansible-pylibssh = "broker.binds.pylibssh:InteractiveShell"
ssh2-python = "broker.binds.ssh2:InteractiveShell"
paramiko = "broker.binds.paramiko:InteractiveShell"

[tool.bumpver]
current_version = "0.7.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version to {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['^version = "{version}"', '^current_version = "{version}"']
"broker_settings.yaml.example" = ["^_version: {version}"]


[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["-v", "-l", "--color=yes", "--code-highlight=yes"]

[tool.ruff]
line-length = 100
exclude = ["tests/"]
target-version = "py310"

[tool.ruff.lint]
fixable = ["ALL"]

select = [
    "B002",    # Python does not support the unary prefix increment
    "B007",    # Loop control variable {name} not used within loop body
    "B009",    # Do not call getattr with a constant attribute value
    "B010",    # Do not call setattr with a constant attribute value
    "B011",    # Do not `assert False`, raise `AssertionError` instead
    "B013",    # Redundant tuple in exception handler
    "B014",    # Exception handler with duplicate exception
    "B023",    # Function definition does not bind loop variable {name}
    "B026",    # Star-arg unpacking after a keyword argument is strongly discouraged
    "BLE001",  # Using bare except clauses is prohibited
    "C",       # complexity
    "C4",      # flake8-comprehensions
    "COM818",  # Trailing comma on bare tuple prohibited
    "D",       # docstrings
    "E",       # pycodestyle
    "F",       # pyflakes/autoflake
    "G",       # flake8-logging-format
    "I",       # isort
    "ISC001",  # Implicitly concatenated string literals on one line
    "N804",    # First argument of a class method should be named cls
    "N805",    # First argument of a method should be named self
    "N815",    # Variable {name} in class scope should not be mixedCase
    "N999",    # Invalid module name: '{name}'
    "PERF",    # Perflint rules
    "PGH004",  # Use specific rule codes when using noqa
    "PLC0414", # Useless import alias. Import alias does not rename original package.
    "PLC",     # pylint
    "PLE",     # pylint
    "PLR",     # pylint
    "PLW",     # pylint
    "PTH",     # Use pathlib
    "RUF",     # Ruff-specific rules
    "S103",    # bad-file-permissions
    "S108",    # hardcoded-temp-file
    "S110",    # try-except-pass
    "S112",    # try-except-continue
    "S113",    # Probable use of requests call without timeout
    "S306",    # suspicious-mktemp-usage
    "S307",    # suspicious-eval-usage
    "S601",    # paramiko-call
    "S602",    # subprocess-popen-with-shell-equals-true
    "S604",    # call-with-shell-equals-true
    "S609",    # unix-command-wildcard-injection
    "SIM105",  # Use contextlib.suppress({exception}) instead of try-except-pass
    "SIM117",  # Merge with-statements that use the same scope
    "SIM118",  # Use {key} in {dict} instead of {key} in {dict}.keys()
    "SIM201",  # Use {left} != {right} instead of not {left} == {right}
    "SIM208",  # Use {expr} instead of not (not {expr})
    "SIM212",  # Use {a} if {a} else {b} instead of {b} if not {a} else {a}
    "SIM300",  # Yoda conditions. Use 'age == 42' instead of '42 == age'.
    "SIM401",  # Use get from dict with default instead of an if block
    "T100",    # Trace found: {name} used
    "T20",     # flake8-print
    "TRY004",  # Prefer TypeError exception for invalid type
    "TRY203",  # Remove exception handler; error is immediately re-raised
    "PLR0911", # Too many return statements ({returns} > {max_returns})
    "PLR0912", # Too many branches ({branches} > {max_branches})
    "PLR0915", # Too many statements ({statements} > {max_statements})
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "PLW2901", # Outer {outer_kind} variable {name} overwritten by inner {inner_kind} target
    "UP",      # pyupgrade
    "W",       # pycodestyle
]

ignore = [
    "ANN",     # flake8-annotations
    "D203",    # 1 blank line required before class docstring
    "D213",    # Multi-line docstring summary should start at the second line
    "D406",    # Section name should end with a newline
    "D407",    # Section name underlining
    "D413",    # Missing blank line after last section
    "E501",    # line too long
    "E731",    # do not assign a lambda expression, use a def
    "PLC0415", # ignore top-level import restrictions
    "PLR0913", # Too many arguments to function call ({c_args} > {max_args})
    "RUF012",  # Mutable class attributes should be annotated with typing.ClassVar
    "D107",    # Missing docstring in __init__
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["broker"]
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
# None at this time

[tool.ruff.lint.mccabe]
max-complexity = 25
